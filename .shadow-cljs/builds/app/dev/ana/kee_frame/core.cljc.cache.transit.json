["^ ","~:output",["^ ","~:js","goog.provide('kee_frame.core');\r\ngoog.require('cljs.core');\r\ngoog.require('kee_frame.state');\r\ngoog.require('kee_frame.router');\r\ngoog.require('re_chain.core');\r\ngoog.require('re_frame.core');\r\ngoog.require('kee_frame.spec');\r\ngoog.require('kee_frame.debug');\r\ngoog.require('cljs.spec.alpha');\r\ngoog.require('expound.alpha');\r\nkee_frame.core.kee_frame_interceptors = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [kee_frame.spec.spec_interceptor(kee_frame.state.app_db_spec),kee_frame.debug.debug_interceptor(kee_frame.state.debug_QMARK_),re_frame.core.trim_v], null);\r\nkee_frame.core.valid_option_key_QMARK_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 12, [new cljs.core.Keyword(null,\"debug-config\",\"debug-config\",329260673),null,new cljs.core.Keyword(null,\"routes\",\"routes\",457900162),null,new cljs.core.Keyword(null,\"screen\",\"screen\",1990059748),null,new cljs.core.Keyword(null,\"router\",\"router\",1091916230),null,new cljs.core.Keyword(null,\"app-db-spec\",\"app-db-spec\",-1030582586),null,new cljs.core.Keyword(null,\"hash-routing?\",\"hash-routing?\",471914732),null,new cljs.core.Keyword(null,\"chain-links\",\"chain-links\",951542256),null,new cljs.core.Keyword(null,\"process-route\",\"process-route\",-38423566),null,new cljs.core.Keyword(null,\"debug?\",\"debug?\",-1831756173),null,new cljs.core.Keyword(null,\"scroll\",\"scroll\",971553779),null,new cljs.core.Keyword(null,\"root-component\",\"root-component\",-1807026475),null,new cljs.core.Keyword(null,\"initial-db\",\"initial-db\",1939835102),null], null), null);\r\n/**\r\n * Complete listing of invalid options sent to the `start!` function.\r\n */\r\nkee_frame.core.extra_options = (function kee_frame$core$extra_options(options){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__41202){\r\nvar vec__41203 = p__41202;\r\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41203,(0),null);\r\nreturn cljs.core.not((kee_frame.core.valid_option_key_QMARK_.cljs$core$IFn$_invoke$arity$1 ? kee_frame.core.valid_option_key_QMARK_.cljs$core$IFn$_invoke$arity$1(k) : kee_frame.core.valid_option_key_QMARK_.call(null,k)));\r\n}),options));\r\n});\r\n/**\r\n * Starts your client application with the specified `options`.\r\n * \r\n *   This function is intentionally forgiving in certain ways:\r\n *   - You can call it as often as you want. Figwheel should call it on each code change\r\n *   - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\r\n * \r\n *   Usage:\r\n *   ```\r\n *   (k/start! {:debug?         true\r\n *           :routes         my-reitit-routes\r\n *           :hash-routing?  true\r\n *           :initial-db     {:some-property \"default value\"}\r\n *           :root-component [my-reagent-root-component]\r\n *           :app-db-spec    :spec/my-db-spec})\r\n *   ```\r\n */\r\nkee_frame.core.start_BANG_ = (function kee_frame$core$start_BANG_(options){\r\nif(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options)){\r\n} else {\r\nexpound.alpha.expound(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options);\r\n\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid options\",cljs.spec.alpha.explain_data(new cljs.core.Keyword(\"kee-frame.spec\",\"start-options\",\"kee-frame.spec/start-options\",-1456248968),options));\r\n}\r\n\r\nvar extras_41230 = kee_frame.core.extra_options(options);\r\nif(cljs.core.seq(extras_41230)){\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Uknown startup options. Valid keys are \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(kee_frame.core.valid_option_key_QMARK_)].join(''),extras_41230);\r\n} else {\r\n}\r\n\r\nreturn kee_frame.router.start_BANG_(options);\r\n});\r\nkee_frame.core.debug_enabled_QMARK_ = (function kee_frame$core$debug_enabled_QMARK_(){\r\nvar map__41206 = cljs.core.deref(kee_frame.state.debug_config);\r\nvar map__41206__$1 = (((((!((map__41206 == null))))?(((((map__41206.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__41206.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__41206):map__41206);\r\nvar overwrites_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__41206__$1,new cljs.core.Keyword(null,\"overwrites?\",\"overwrites?\",-1906761528),false);\r\nvar and__4174__auto__ = cljs.core.deref(kee_frame.state.debug_QMARK_);\r\nif(cljs.core.truth_(and__4174__auto__)){\r\nreturn overwrites_QMARK_;\r\n} else {\r\nreturn and__4174__auto__;\r\n}\r\n});\r\n/**\r\n * Put a controller config map into the global controller registry.\r\n * \r\n *   Parameters:\r\n * \r\n *   `id`: Must be unique in controllere registry. Will appear in logs.\r\n * \r\n *   `controller`: A map with the following keys:\r\n *   - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\r\n *   return means that the controller should not run for this route.\r\n * \r\n *   - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\r\n *   invocation. The function receives whatever non-nil value that was returned from `params`,\r\n *   and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\r\n *   can be omitted.\r\n * \r\n *   - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\r\n *   current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\r\n *   can be omitted.\r\n */\r\nkee_frame.core.reg_controller = (function kee_frame$core$reg_controller(id,controller){\r\nif(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller)){\r\n} else {\r\nexpound.alpha.expound(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller);\r\n\r\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid controller\",cljs.spec.alpha.explain_data(new cljs.core.Keyword(\"kee-frame.spec\",\"controller\",\"kee-frame.spec/controller\",70465085),controller));\r\n}\r\n\r\nif(cljs.core.truth_((function (){var and__4174__auto__ = kee_frame.core.debug_enabled_QMARK_();\r\nif(cljs.core.truth_(and__4174__auto__)){\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(kee_frame.state.controllers),id);\r\n} else {\r\nreturn and__4174__auto__;\r\n}\r\n})())){\r\nvar G__41208_41231 = new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552);\r\nvar G__41209_41232 = \"Overwriting controller with id \";\r\nvar G__41210_41233 = id;\r\n(re_frame.core.console.cljs$core$IFn$_invoke$arity$3 ? re_frame.core.console.cljs$core$IFn$_invoke$arity$3(G__41208_41231,G__41209_41232,G__41210_41233) : re_frame.core.console.call(null,G__41208_41231,G__41209_41232,G__41210_41233));\r\n} else {\r\n}\r\n\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(kee_frame.state.controllers,cljs.core.assoc,id,controller);\r\n});\r\n/**\r\n * Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\r\n * \r\n *   `re-frame.core/trim-v` interceptor is also applied.\r\n */\r\nkee_frame.core.reg_event_fx = (function kee_frame$core$reg_event_fx(var_args){\r\nvar G__41214 = arguments.length;\r\nswitch (G__41214) {\r\ncase 2:\r\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(kee_frame.core.kee_frame_interceptors,interceptors),handler);\r\n}));\r\n\r\n(kee_frame.core.reg_event_fx.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\r\n * \r\n *   `re-frame.core/trim-v` interceptor is also applied.\r\n */\r\nkee_frame.core.reg_event_db = (function kee_frame$core$reg_event_db(var_args){\r\nvar G__41221 = arguments.length;\r\nswitch (G__41221) {\r\ncase 2:\r\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\r\n\r\nbreak;\r\ncase 3:\r\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\r\n\r\nbreak;\r\ndefault:\r\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\r\n\r\n}\r\n});\r\n\r\n(kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 = (function (id,handler){\r\nreturn kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\r\n}));\r\n\r\n(kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 = (function (id,interceptors,handler){\r\nreturn re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(kee_frame.core.kee_frame_interceptors,interceptors),handler);\r\n}));\r\n\r\n(kee_frame.core.reg_event_db.cljs$lang$maxFixedArity = 3);\r\n\r\n/**\r\n * Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\r\n *   event log.\r\n * \r\n *   Parameters:\r\n * \r\n *   `handlers`: pairs of id and event handler.\r\n * \r\n *   Usage:\r\n *   ```\r\n *   (k/reg-chain-named\r\n * \r\n *  :load-customer-data\r\n *  (fn [ctx [customer-id]]\r\n *    {:http-xhrio {:uri \"...\"}})\r\n * \r\n *  :receive-customer-data\r\n *   (fn [ctx [customer-id customer-data]]\r\n *    (assoc-in ctx [:db :customers customer-id] customer-data)))\r\n *   ```\r\n */\r\nkee_frame.core.reg_chain_named = (function kee_frame$core$reg_chain_named(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___41236 = arguments.length;\r\nvar i__4790__auto___41237 = (0);\r\nwhile(true){\r\nif((i__4790__auto___41237 < len__4789__auto___41236)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___41237]));\r\n\r\nvar G__41238 = (i__4790__auto___41237 + (1));\r\ni__4790__auto___41237 = G__41238;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((0) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((0)),(0),null)):null);\r\nreturn kee_frame.core.reg_chain_named.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);\r\n});\r\n\r\n(kee_frame.core.reg_chain_named.cljs$core$IFn$_invoke$arity$variadic = (function (handlers){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(re_chain.core.reg_chain_named_STAR_,kee_frame.core.kee_frame_interceptors,handlers);\r\n}));\r\n\r\n(kee_frame.core.reg_chain_named.cljs$lang$maxFixedArity = (0));\r\n\r\n/** @this {Function} */\r\n(kee_frame.core.reg_chain_named.cljs$lang$applyTo = (function (seq41222){\r\nvar self__4777__auto__ = this;\r\nreturn self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq41222));\r\n}));\r\n\r\n/**\r\n * Register a list of re-frame fx handlers, chained together.\r\n * \r\n *   The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\r\n *   you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\r\n * \r\n *   Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\r\n *   receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\r\n *   to make all context available to the entire chain, without a complex framework or crazy scope tricks.\r\n * \r\n *   Parameters:\r\n * \r\n *   `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\r\n *   if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\r\n * \r\n *   `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\r\n * \r\n * \r\n *   Usage:\r\n *   ```\r\n *   (k/reg-chain\r\n *  :load-customer-data\r\n * \r\n *  (fn [ctx [customer-id]]\r\n *    {:http-xhrio {:uri    (str \"/customer/\" customer-id)\r\n *                  :method :get}})\r\n * \r\n *  (fn [cxt [customer-id customer-data]\r\n *    (assoc-in ctx [:db :customers customer-id] customer-data)))\r\n *   ```\r\n */\r\nkee_frame.core.reg_chain = (function kee_frame$core$reg_chain(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___41239 = arguments.length;\r\nvar i__4790__auto___41240 = (0);\r\nwhile(true){\r\nif((i__4790__auto___41240 < len__4789__auto___41239)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___41240]));\r\n\r\nvar G__41241 = (i__4790__auto___41240 + (1));\r\ni__4790__auto___41240 = G__41241;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn kee_frame.core.reg_chain.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(kee_frame.core.reg_chain.cljs$core$IFn$_invoke$arity$variadic = (function (id,handlers){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(re_chain.core.reg_chain_STAR_,id,kee_frame.core.kee_frame_interceptors,handlers);\r\n}));\r\n\r\n(kee_frame.core.reg_chain.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(kee_frame.core.reg_chain.cljs$lang$applyTo = (function (seq41224){\r\nvar G__41225 = cljs.core.first(seq41224);\r\nvar seq41224__$1 = cljs.core.next(seq41224);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41225,seq41224__$1);\r\n}));\r\n\r\n/**\r\n * Make a uri from route data. Useful for avoiding hard coded links in your app.\r\n * \r\n *   Parameters:\r\n * \r\n *   `handler`: The reitit handler from route data\r\n * \r\n *   `params`: Reitit route params for the requested route\r\n * \r\n *   Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`\r\n */\r\nkee_frame.core.path_for = (function kee_frame$core$path_for(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___41242 = arguments.length;\r\nvar i__4790__auto___41243 = (0);\r\nwhile(true){\r\nif((i__4790__auto___41243 < len__4789__auto___41242)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___41243]));\r\n\r\nvar G__41244 = (i__4790__auto___41243 + (1));\r\ni__4790__auto___41243 = G__41244;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn kee_frame.core.path_for.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(kee_frame.core.path_for.cljs$core$IFn$_invoke$arity$variadic = (function (handler,params){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(kee_frame.router.url,handler,params);\r\n}));\r\n\r\n(kee_frame.core.path_for.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(kee_frame.core.path_for.cljs$lang$applyTo = (function (seq41226){\r\nvar G__41227 = cljs.core.first(seq41226);\r\nvar seq41226__$1 = cljs.core.next(seq41226);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41227,seq41226__$1);\r\n}));\r\n\r\n/**\r\n * Reagent component that renders different components for different routes.\r\n * \r\n *   You might need to include a case for `nil`, since there are no route data before the first navigation.\r\n * \r\n *   Parameters:\r\n * \r\n *   `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\r\n * \r\n *   `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\r\n * \r\n *   Returns the first component with a matching dispatch value.\r\n * \r\n *   Usage:\r\n *   ```\r\n *   [k/switch-route (fn [route] (:handler route))\r\n *  :index [:div \"This is index page\"]\r\n *  :about [:div \"This is the about page\"]\r\n *  nil    [:div \"Probably also the index page\"]]\r\n *   ```\r\n */\r\nkee_frame.core.switch_route = (function kee_frame$core$switch_route(var_args){\r\nvar args__4795__auto__ = [];\r\nvar len__4789__auto___41245 = arguments.length;\r\nvar i__4790__auto___41246 = (0);\r\nwhile(true){\r\nif((i__4790__auto___41246 < len__4789__auto___41245)){\r\nargs__4795__auto__.push((arguments[i__4790__auto___41246]));\r\n\r\nvar G__41247 = (i__4790__auto___41246 + (1));\r\ni__4790__auto___41246 = G__41247;\r\ncontinue;\r\n} else {\r\n}\r\nbreak;\r\n}\r\n\r\nvar argseq__4796__auto__ = ((((1) < args__4795__auto__.length))?(new cljs.core.IndexedSeq(args__4795__auto__.slice((1)),(0),null)):null);\r\nreturn kee_frame.core.switch_route.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4796__auto__);\r\n});\r\n\r\n(kee_frame.core.switch_route.cljs$core$IFn$_invoke$arity$variadic = (function (f,pairs){\r\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(kee_frame.router.switch_route,f,pairs);\r\n}));\r\n\r\n(kee_frame.core.switch_route.cljs$lang$maxFixedArity = (1));\r\n\r\n/** @this {Function} */\r\n(kee_frame.core.switch_route.cljs$lang$applyTo = (function (seq41228){\r\nvar G__41229 = cljs.core.first(seq41228);\r\nvar seq41228__$1 = cljs.core.next(seq41228);\r\nvar self__4776__auto__ = this;\r\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41229,seq41228__$1);\r\n}));\r\n\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","kee_frame/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.gen.alpha","~$cljs.spec.gen.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$kee-frame.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","^B","^C","~$kee-frame.state","^Q","~$re-chain.core","^R","~$expound.alpha","^S","~$rf","~$re-frame.core","~$cljs.core","^V","~$goog","^W","~$router","~$kee-frame.router","^Y","^Y","~$kee-frame.debug","^Z","~$state","^Q","~$e","^S","~$s","^C","~$spec","~$kee-frame.spec","^11","^11","^C","^C","~$chain","^R","^U","^U"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$console","^U","~$spec-interceptor","^11","~$debug-interceptor","^Z"],"~:require-macros",["^ ","^V","^V","^B","^C","~$s","^C","^C","^C"],"~:form",["~#list",["~$ns","^L",["^1;",["^14",["^Q","~:as","^["],["^Y","^1=","^X"],["^R","^1=","^12"],["^U","^1=","^T","~:refer",["^16"]],["^11","^1=","^10","^1>",["^17"]],["^Z","^1>",["^18"]],["^B","^1=","~$s"],["^S","^1=","~$e"]]]]],"~:flags",["^ ","^14",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^W","^V","^Q","^Y","^R","^U","^11","^Z","^C","^S"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","kee_frame/core.cljc"],"~:compiled-at",1588185575146,"~:resource-name","kee_frame/core.cljc","~:warnings",[],"~:source","(ns kee-frame.core\n  (:require [kee-frame.state :as state]\n            [kee-frame.router :as router]\n            [re-chain.core :as chain]\n            [re-frame.core :as rf :refer [console]]\n            [kee-frame.spec :as spec :refer [spec-interceptor]]\n            [kee-frame.debug :refer [debug-interceptor]]\n            [clojure.spec.alpha :as s]\n            [expound.alpha :as e]))\n\n;; Interceptors used by all chains and events registered through kee-frame\n(def kee-frame-interceptors [(spec-interceptor state/app-db-spec) (debug-interceptor state/debug?) rf/trim-v])\n\n(def valid-option-key? #{:router :hash-routing? :routes :process-route :debug? :debug-config\n                         :chain-links :app-db-spec :root-component :initial-db\n                         :screen :scroll})\n\n(defn extra-options\n  \"Complete listing of invalid options sent to the `start!` function.\"\n  [options]\n  (->> options\n       (filter (fn [[k]] (not (valid-option-key? k))))\n       (into {})))\n\n(defn start!\n  \"Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \\\"default value\\\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```\"\n  [options]\n  (when-not (s/valid? ::spec/start-options options)\n    (e/expound ::spec/start-options options)\n    (throw (ex-info \"Invalid options\" (s/explain-data ::spec/start-options options))))\n  (let [extras (extra-options options)]\n    (when (seq extras)\n      (throw (ex-info (str \"Uknown startup options. Valid keys are \" valid-option-key?) extras))))\n  (router/start! options))\n\n(defn debug-enabled? []\n  (let [{:keys [overwrites?]\n         :or   {overwrites? false}} @state/debug-config]\n    (and @state/debug?\n         overwrites?)))\n\n(defn reg-controller\n  \"Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\"\n  [id controller]\n  (when-not (s/valid? ::spec/controller controller)\n    (e/expound ::spec/controller controller)\n    (throw (ex-info \"Invalid controller\" (s/explain-data ::spec/controller controller))))\n  (when (and (debug-enabled?)\n             (get @state/controllers id))\n    (console :warn \"Overwriting controller with id \" id))\n  (swap! state/controllers assoc id controller))\n\n(defn reg-event-fx\n  \"Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.\"\n  ([id handler] (reg-event-fx id nil handler))\n  ([id interceptors handler] (rf/reg-event-fx id (concat kee-frame-interceptors interceptors) handler)))\n\n(defn reg-event-db\n  \"Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.\"\n  ([id handler] (reg-event-db id nil handler))\n  ([id interceptors handler] (rf/reg-event-db id (concat kee-frame-interceptors interceptors) handler)))\n\n(defn reg-chain-named\n  \"Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \\\"...\\\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```\"\n  [& handlers]\n  (apply chain/reg-chain-named* kee-frame-interceptors handlers))\n\n(defn reg-chain\n  \"Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \\\"/customer/\\\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```\"\n  [id & handlers]\n  (apply chain/reg-chain* id kee-frame-interceptors handlers))\n\n(defn path-for\n  \"Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \\\"Orders sorted by date\\\"]`\"\n  [handler & params]\n  (apply router/url handler params))\n\n(defn switch-route\n  \"Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \\\"This is index page\\\"]\n    :about [:div \\\"This is the about page\\\"]\n    nil    [:div \\\"Probably also the index page\\\"]]\n  ```\"\n  [f & pairs]\n  (apply router/switch-route f pairs))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["kee-frame.core/kee-frame-interceptors","kee-frame.spec/spec-interceptor","kee-frame.state/app-db-spec","kee-frame.debug/debug-interceptor","kee-frame.state/debug?","re-frame.core/trim-v","kee-frame.core/valid-option-key?","kee-frame.core/extra-options","options","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","p__41202","vec__41203","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","cljs.core/not","cljs.core.into.cljs$core$IFn$_invoke$arity$2","kee-frame.core/start!","cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2","expound.alpha/expound","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","cljs.spec.alpha/explain-data","extras","cljs.core/seq","kee-frame.router/start!","kee-frame.core/debug-enabled?","map__41206","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$3","overwrites?","kee-frame.state/debug-config","and__4174__auto__","kee-frame.core/reg-controller","id","controller","cljs.core.get.cljs$core$IFn$_invoke$arity$2","kee-frame.state/controllers","G__41208","G__41209","G__41210","re-frame.core/console","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","var_args","G__41214","kee-frame.core/reg-event-fx","js/Error","handler","kee_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3","interceptors","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","G__41221","kee-frame.core/reg-event-db","kee_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3","re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","kee-frame.core/reg-chain-named","seq41222","self__4777__auto__","handlers","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","re-chain.core/reg-chain-named*","kee-frame.core/reg-chain","seq41224","G__41225","cljs.core/first","cljs.core/next","self__4776__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","re-chain.core/reg-chain*","kee-frame.core/path-for","seq41226","G__41227","params","kee-frame.router/url","kee-frame.core/switch-route","seq41228","G__41229","f","pairs","kee-frame.router/switch-route"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1580517115000,1580517115000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1C","reagent/impl/batching.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$reagent.debug","~$reagent.impl.util"]]],["^1C","goog/dom/tagname.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.dom.HtmlElement"]]],["^1C","goog/async/freelist.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cljs/core/async/impl/ioc_helpers.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$cljs.core.async.impl.protocols"]]],["^1C","goog/labs/useragent/platform.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.labs.userAgent.util","~$goog.string"]]],["^1C","expound/util.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","cljs/core/async.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^1[","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1C","goog/timer/timer.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.Promise","~$goog.events.EventTarget"]]],["^1C","cljs/spec/gen/alpha.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$goog.Uri"]]],["^1C","cljs/tools/reader/impl/utils.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$clojure.string","^21"]]],["^1C","goog/math/math.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/string/stringformat.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^21"]]],["^1C","goog/events/eventtype.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1C","goog/labs/useragent/browser.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^20","~$goog.object","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2@"]]],["^1C","re_frame/loggers.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$clojure.set"]]],["^1C","kee_frame/state.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/style/style.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^2?","~$goog.reflect","^21","^2>"]]],["^1C","goog/array/array.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<"]]],["^1P","node_modules/prop-types/checkPropTypes.js"],[1580517115000,1580517115000,1549836454000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1C","reagent/impl/util.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;"]]],["^1C","expound/problems.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$expound.paths","^C","~$clojure.walk","^2;","~$expound.printer","~$expound.ansi"]]],["^1C","goog/useragent/useragent.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^20","^2Q","^21"]]],["^1C","re_frame/router.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$re-frame.events","~$re-frame.interop","~$re-frame.loggers","~$re-frame.trace"]]],["^1C","goog/structs/prioritypool.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1C","goog/async/run.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1C","com/cognitect/transit/impl/reader.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1C","goog/debug/error.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/net/xhrmanager.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.events","~$goog.events.Event","~$goog.events.EventHandler","^29","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.structs.Map"]]],["^1C","goog/async/workqueue.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.async.FreeList"]]],["^1C","ajax/interceptors.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","~$ajax.util","~$ajax.url","~$ajax.protocols"]]],["^1C","goog/events/events.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2=","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1C","goog/promise/resolver.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","re_frame/registrar.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2[","^30"]]],["^1C","goog/events/browserfeature.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2>"]]],["^1C","cljs/tools/reader/edn.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^21","~$goog.string.StringBuffer"]]],["^1C","goog/useragent/product_isversion.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2Y","^21","^2>","~$goog.userAgent.product"]]],["^1C","goog/structs/priorityqueue.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.structs.Heap"]]],["^1C","goog/fx/animation.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^3:","~$goog.fx.Transition","~$goog.fx.TransitionBase","~$goog.fx.anim","~$goog.fx.anim.Animated"]]],["^1C","goog/net/xhrio.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.Timer","^27","^2<","^3E","^29","~$goog.json.hybrid","~$goog.log","^3<","^3=","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2?","^21","~$goog.structs","^3@","~$goog.uri.utils","^2>"]]],["^1C","goog/promise/thenable.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/color/color.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.color.names","~$goog.math"]]],["^1C","goog/dom/nodetype.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/async/animationdelay.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.Disposable","^39","~$goog.functions"]]],["^1C","cljs/tools/reader/impl/inspect.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","com/cognitect/transit/util.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2?"]]],["^1C","cljs/pprint.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^21","^3N"]]],["^1C","chord/client.cljs"],[1580771654270,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$cljs.core.async","~$chord.channels","~$chord.format"]]],["^1C","ajax/protocols.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","ajax/transit.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$cognitect.transit","~$ajax.interceptors","^3D","^3B"]]],["^1C","cljs/tools/reader.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3J","^3K","^3L","^3I","^27","^21","^3N"]]],["^1C","expound/alpha.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$expound.problems","^C","^2;","^2G","^2T","~$goog.string.format","^21","^2U","~$expound.util","^2V","^G"]]],["^1C","goog/useragent/platform.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^21","^2>"]]],["^1P","node_modules/scheduler/cjs/scheduler.development.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1C","goog/net/wrapperxmlhttpfactory.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1C","ajax/simple.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^3D","^48","~$ajax.formats","^3B","^3>"]]],["^1C","kee_frame/router.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$kee-frame.interop","^U","^R","~$kee-frame.api","^Q","~$kee-frame.scroll","~$kee-frame.controller","~$reitit.core","^2;","^C","^11","^S"]]],["^1C","reagent/ratom.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^1Y","^1X","~$reagent.impl.batching","^2G","^2?"]]],["^1P","node_modules/scheduler/cjs/scheduler.production.min.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1C","re_frame/interop.cljs"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^35","~$reagent.core","~$reagent.ratom"]]],["^1C","goog/events/eventtarget.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^42","^2<","^39","^3:","^3G","^3H","^2?"]]],["^1C","reitit/segment.cljc"],[1582255682014,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$reitit.impl","^2;"]]],["^1C","goog/disposable/disposable.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.disposable.IDisposable"]]],["^1C","ajax/url.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^3B"]]],["^1C","expound/ansi.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;"]]],["^1C","goog/string/typedstring.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1P","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1P","node_modules/react/index.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],[1580517115096,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/object/object.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","reagent/impl/template.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^?","^2;","^2T","^1Y","~$reagent.impl.component","^4D","^4F","^1X","^2?"]]],["^1C","goog/dom/asserts.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<"]]],["^1P","node_modules/react-dom/cjs/react-dom.production.min.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],["^1C","goog/structs/set.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^3Z","~$goog.structs.Collection","^3@"]]],"~:SHADOW-TIMESTAMP",[1580517115000,1580517109000],["^1P","node_modules/react/cjs/react.development.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","^4L","~$module$node_modules$prop_types$checkPropTypes"]]],["^1C","ajax/xml_http_request.cljs"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3D","^21"]]],["^1C","re_frame/events.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$re-frame.db","~$re-frame.utils","^2[","~$re-frame.registrar","^30","~$re-frame.interceptor","^31"]]],["^1C","goog/math/long.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^2Q"]]],["^1C","goog/events/listener.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.events.ListenableKey"]]],["^1C","goog/html/trustedresourceurl.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.html.trustedtypes","^2C","^2D","^2E","^2F"]]],["^1C","chord/format.cljc"],[1580771654270,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^44","~$cljs.reader","^2T","^47"]]],["^1C","goog/math/irect.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cljs/core/async/impl/channels.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^1[","^25","^23"]]],["^1C","goog/events/listenermap.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","~$goog.events.Listener","^2?"]]],["^1C","goog/events/eventid.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/math/box.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^2N"]]],["^1C","goog/string/internal.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/color/names.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1P","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1C","kee_frame/spec.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^4T","^U","^C","^R","^S","^4@"]]],["^1C","goog/functions/functions.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cljs/core/async/impl/dispatch.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^23","^35"]]],["^1C","re_chain/core.cljc"],[1580771652981,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2T","^U","^C","^S"]]],["^1C","goog/html/safestyle.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","~$goog.html.SafeUrl","^2E","^2F","^2@"]]],["^1C","goog/dom/safe.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.dom.asserts","^43","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4Y","^2B","~$goog.html.uncheckedconversions","^2E","^2@"]]],["^1C","expound/paths.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^C","^4;"]]],["^1C","reagent/impl/component.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2?","^?","^1Y","^4D","^4F","^1X"]]],["^1C","clojure/walk.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/useragent/product.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2W","^2Y","^2>"]]],["^1C","cljs/core/async/impl/protocols.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/net/eventtype.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/structs/map.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/net/xhriopool.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^3>","~$goog.structs.PriorityPool"]]],["^1C","com/cognitect/transit/delimiters.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/html/safehtml.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^2J","~$goog.dom.tags","^50","^51","^2L","^4Y","^2B","^4V","^2C","^2D","^2W","^2?","^2E","^2F","^2@"]]],["^1C","kee_frame/debug.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^U","^4T","~$clojure.data","^Q"]]],["^1C","ajax/easy.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$ajax.simple","~$ajax.transit","~$ajax.json","~$ajax.ring","^3C","^4>"]]],["^1C","goog/dom/tags.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2?"]]],["^1C","ajax/util.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3D"]]],["^1C","goog/math/size.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","ajax/xhrio.cljs"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3=","^3<","^3>","~$goog.net.XhrManager","^2:","~$goog.json","^39","^3D"]]],["^1C","re_frame_fx/dispatch.cljs"],[1580771654806,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^U"]]],["^1P","node_modules/scheduler/index.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1C","goog/structs/queue.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27"]]],["^1C","goog/labs/useragent/engine.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^20","^21"]]],["^1C","ajax/ring.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^48","^3D","^4>"]]],["^1C","com/cognitect/transit/impl/decoder.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^38","~$com.cognitect.transit.types"]]],["^1C","breaking_point/core.cljs"],[1580771654786,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^U","~$re-frame-fx.dispatch"]]],["^1C","goog/fx/anim/anim.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.async.AnimationDelay","~$goog.async.Delay","^2?"]]],["^1C","cljs/reader.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2?","^3M","~$cljs.tools.reader.edn","^3N"]]],["^1C","goog/history/eventtype.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/history/event.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^3:","~$goog.history.EventType"]]],["^1C","goog/dom/dom.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","~$goog.dom.BrowserFeature","^2I","^2J","~$goog.dom.safe","^4[","^52","^2N","^2P","^2?","^21","~$goog.string.Unicode","^2>"]]],["^1C","goog/asserts/asserts.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.debug.Error","^2I"]]],["^1C","cljs/core/async/impl/buffers.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^1["]]],["^1C","goog/math/rect.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^2M","^2N","~$goog.math.IRect","^2P"]]],["^1C","goog/debug/logbuffer.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.debug.LogRecord"]]],["^1C","goog/uri/uri.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^21","^3Z","^3@","^3[","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/net/errorcode.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/history/html5history.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^39","^29","~$goog.events.EventType","~$goog.history.Event"]]],["^1C","goog/i18n/bidi.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1P","node_modules/object-assign/index.js"],[1580517115000,1580517115000,1484580833000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1C","re_frame/db.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2["]]],["^1C","cljs/core/match.cljs"],[1580771650126,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/disposable/idisposable.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/promise/promise.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.Thenable","^2<","^3A","~$goog.async.run","^36","^5K","~$goog.promise.Resolver"]]],["^1C","cljs/core/async/impl/timers.cljs"],[1580517105893,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^1[","^22","^25"]]],["^1C","cljs/spec/alpha.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2?","^2T","^G","^2;"]]],["^1C","goog/fs/url.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/debug/logrecord.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/base.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",[]]],["^1C","goog/json/hybrid.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^5="]]],["^1C","goog/structs/structs.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2?"]]],["^1C","kee_frame/controller.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^U","~$cljs.core.match","^Q","^11","^C","^S"]]],["^1C","cljs/tools/reader/impl/errors.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3J","^2;","~$cljs.tools.reader.impl.inspect"]]],["^1C","goog/fx/transition.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","clojure/string.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^21","^3N"]]],["^1C","meta_merge/core.cljc"],[1580771652862,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2G"]]],["^1C","goog/structs/pool.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^42","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1C","chord/channels.cljc"],[1580771654270,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^44","^1["]]],["^1C","re_frame/cofx.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^4Q","^4T","^4S","^30"]]],["^1P","node_modules/react/cjs/react.production.min.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","^4L"]]],["^1C","goog/net/httpstatus.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","com/cognitect/transit/handlers.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5@","^5B","~$goog.math.Long"]]],["^1C","goog/structs/heap.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2?","~$goog.structs.Node"]]],["^1C","ajax/json.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^47","^2T","^48","^3D"]]],["^1C","goog/debug/entrypointregistry.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<"]]],["^1C","goog/string/string.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5I","^52","^2E","^2@"]]],["^1C","com/cognitect/transit/types.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5@","~$com.cognitect.transit.eq","^5Y"]]],["^1C","ajax/formats.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^48","^3B","^3D"]]],["^1C","re_frame/interceptor.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^30","^2[","^31","^2G"]]],["^1C","accountant/core.cljs"],[1580771654216,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^39","^5G","^5Q","~$goog.history.Html5History","^2:"]]],["^1C","clojure/data.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2G"]]],["^1C","goog/reflect/reflect.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/labs/useragent/util.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2@"]]],["^1C","expound/printer.cljc"],[1580517113934,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^C","^E","^2T","^2G","^4;","^2V"]]],["^1C","com/cognitect/transit/eq.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5@"]]],["^1C","reagent/core.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^?","~$reagent.impl.template","^4K","^1Y","^4D","^4F","^1X","~$reagent.dom"]]],["^1C","kee_frame/core.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^Q","^Y","^R","^U","^11","^Z","^C","^S"]]],["^1C","goog/debug/debug.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","~$goog.debug.errorcontext","^2>"]]],["^1C","day8/re_frame/http_fx.cljs"],[1580771653088,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3<","^U","~$ajax.core"]]],["^1C","goog/string/stringbuffer.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/math/coordinate.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^41"]]],["^1C","re_frame/std_interceptors.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^4T","^30","^4S","^4Q","^57","~$re-frame.cofx","^4R","^31"]]],["^1C","goog/debug/errorcontext.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cljs/tools/reader/reader_types.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3K","^21","^3N"]]],["^1C","goog/async/delay.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^42","^3U"]]],["^1C","goog/iter/iter.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^43","^41"]]],["^1C","ajax/core.cljc"],[1582255681936,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^3C","^5:","^59","^5;","^4>","^3B","^48","^58","~$ajax.easy","^3D","~$ajax.xhrio","~$ajax.xml-http-request"]]],["^1C","kee_frame/api.cljc"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/async/nexttick.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^3E","^2H","^2J","^5I","^43","^4[","^2B","^2W","^2X","^2E"]]],["^1C","goog/html/uncheckedconversions.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^4[","^50","^51","^2L","^4Y","^2B","^2E","^2@"]]],["^1C","re_frame/utils.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^30"]]],["^1C","reagent/dom.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^A","^1Y","^61","^4D","^4F"]]],["^1C","goog/debug/logger.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","~$goog.debug","~$goog.debug.LogBuffer","^5M"]]],["^1C","com/cognitect/transit/caching.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5A"]]],["^1C","re_frame/fx.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$re-frame.router","^4Q","^4T","^2[","^2Z","^4S","^30","^31"]]],["^1P","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1580517115000,1580517115000,1549571078000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U"]]],["^1C","goog/events/event.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^42","~$goog.events.EventId"]]],["^1C","reitit/core.cljc"],[1582255682014,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$meta-merge.core","^2;","~$reitit.segment","^4G"]]],["^1C","kee_frame/interop.cljs"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^4@","~$accountant.core","^4E","^U","~$day8.re-frame.http-fx","~$chord.client","~$breaking-point.core","^2;","^30"]]],["^1C","cljs/tools/reader/impl/commons.cljs"],[1580517104741,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^3I","^3J","^3K"]]],["^1C","goog/events/eventhandler.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^42","^39","^2?"]]],["^1C","goog/dom/htmlelement.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cljs/core.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^5Y","~$goog.math.Integer","^21","^2?","^27","^2:","^3N"]]],["^1C","com/cognitect/transit.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5@","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^5B","^5[","^37","^38"]]],["^1C","goog/html/safescript.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^4V","^2E","^2F"]]],["^1C","goog/log/log.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^69","~$goog.debug.LogManager","^5M","~$goog.debug.Logger"]]],["^1C","reagent/debug.cljs"],[1584279713756,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","goog/html/safestylesheet.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^51","^2?","^2E","^2F","^2@"]]],["^1C","goog/structs/collection.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/events/browserevent.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^69","^2=","^3:","^5P","^2Q","^2>"]]],["^1C","goog/math/integer.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2Q"]]],["^1C","goog/structs/node.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","goog/dom/browserfeature.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2>"]]],["^1P","node_modules/scheduler/tracing.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1P","node_modules/react-dom/cjs/react-dom.development.js"],[1580517115000,1580517115000,499162500000,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^1U","^?","^4L","^4M","^4P","~$module$node_modules$scheduler$tracing"]]],["^1C","clojure/set.cljs"],[1580517109662,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V"]]],["^1C","kee_frame/scroll.cljs"],[1582255681742,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^U","^64","^4E","~$clerk.core"]]],["^1C","goog/uri/utils.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^27","^2<","^21"]]],["^1C","goog/string/const.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","^2F"]]],["^1C","goog/fx/transitionbase.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^29","^3Q"]]],["^1C","goog/dom/vendor.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^21","^2>"]]],["^1C","reitit/impl.cljc"],[1582255682014,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2;","^2G"]]],["^1C","goog/json/json.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","clerk/core.cljs"],[1580771655100,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^39","^5P","~$goog.fx.dom","^2H","~$goog.style","^44","^2:"]]],["^1C","goog/events/listenable.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^6<"]]],["^1C","com/cognitect/transit/impl/writer.js"],[1580517105836,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^5@","^38","~$com.cognitect.transit.handlers","^5B","^5A","^5Y"]]],["^1C","goog/net/xmlhttpfactory.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^4<"]]],["^1C","goog/fx/dom.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","~$goog.color","^39","~$goog.fx.Animation","^3Q","^6M","~$goog.style.bidi"]]],["^1C","goog/net/xmlhttp.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2<","~$goog.net.WrapperXmlHttpFactory","^4="]]],["^1C","re_frame/trace.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2[","^30","^43"]]],["^1C","re_frame/subs.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^4Q","^2[","^30","^4R","^4S","^31"]]],["^1C","goog/net/xhrlike.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W"]]],["^1C","cognitect/transit.cljs"],[1580517105826,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","~$com.cognitect.transit","^5B","^5[","^5Y"]]],["^1C","re_frame/core.cljc"],[1584278805509,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^V","^2Z","~$re-frame.subs","^2[","^4Q","~$re-frame.fx","^65","^6;","^30","^4S","^4T","~$re-frame.std-interceptors","^2G"]]],["^1C","goog/style/bidi.js"],[1580517112058,"^1Q",["^ ","^1R",null,"^1S",["^J",[]],"^1T",["^W","^2H","^6M","^2>","~$goog.userAgent.platform","^3O","~$goog.userAgent.product.isVersion"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.match/0.3.0-alpha5/core.match-0.3.0-alpha5.jar!/cljs/core/match.clj",1580771650000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/spec/alpha.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1584278805000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/cljs/core/async/impl/ioc_macros.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1584279713000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/walk.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1584279713000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/clojure/core/async/impl/dispatch.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/clojure/core/async/impl/concurrent.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/pprint.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1584278805000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/cljs/core/async.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1584279713000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1584278805000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/cljs-ajax/cljs-ajax/0.8.0/cljs-ajax-0.8.0.jar!/ajax/macros.clj",1582255681000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/metosin/reitit-core/0.2.13/reitit-core-0.2.13.jar!/reitit/impl.cljc",1582255682000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/clojure/core/async/impl/exec/threadpool.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/reader.clj",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/spec/gen/alpha.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/clojure/core/async/impl/protocols.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1584279713000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1580517105000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1580517104000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1580517109000,"jar:file:/C:/Users/JaceMaverick/.m2/repository/org/clojure/core.async/0.6.532/core.async-0.6.532.jar!/cljs/core/async/macros.clj",1580517105000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","kee_frame/core.cljc","^7",1,"^8",5,"^9",1,"^:",19],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^B","^C","^Q","^Q","^R","^R","^S","^S","^T","^U","^V","^V","^W","^W","^X","^Y","^Y","^Y","^Z","^Z","^[","^Q","~$e","^S","~$s","^C","^10","^11","^11","^11","^C","^C","^12","^R","^U","^U"],"^13",["^J",["^14"]],"~:shadow/js-access-global",["^J",["Error"]],"^15",["^ ","^16","^U","^17","^11","^18","^Z"],"~:defs",["^ ","~$switch-route",["^ ","~:protocol-inline",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",167,"^8",7,"^9",167,"^:",19,"~:arglists",["^1;",["~$quote",["^1;",[["~$f","~$&","~$pairs"]]]]],"~:doc","Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \"This is index page\"]\n    :about [:div \"This is the about page\"]\n    nil    [:div \"Probably also the index page\"]]\n  ```","~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^1;",["~$f","^88"]]],"^86",["^1;",[["~$f","~$&","^88"]]],"~:arglists-meta",["^1;",[null]]]],"^K","~$kee-frame.core/switch-route","^6","kee_frame/core.cljc","^:",19,"^8:",["^ ","^8;",true,"^8<",1,"^8=",1,"^8>",[["^1;",["~$f","^88"]]],"^86",["^1;",[["~$f","~$&","^88"]]],"^8?",["^1;",[null]]],"^8>",[["^1;",["~$f","^88"]]],"~:protocol-impl",null,"^8<",1,"^8?",["^1;",[null]],"^8",1,"^8;",true,"~:methods",[["^ ","^8<",1,"^8;",true,"~:tag","~$any"]],"^7",167,"~:ret-tag","^8D","^9",167,"^8=",1,"~:fn-var",true,"^86",["^1;",[["~$f","~$&","^88"]]],"^89","Reagent component that renders different components for different routes.\n\n  You might need to include a case for `nil`, since there are no route data before the first navigation.\n\n  Parameters:\n\n  `f`: A function that receives the route data on every route change, and returns the value to dispatch on.\n\n  `pairs`: A pair consists of the dispatch value and the reagent component to dispatch to.\n\n  Returns the first component with a matching dispatch value.\n\n  Usage:\n  ```\n  [k/switch-route (fn [route] (:handler route))\n    :index [:div \"This is index page\"]\n    :about [:div \"This is the about page\"]\n    nil    [:div \"Probably also the index page\"]]\n  ```"],"~$start!",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",25,"^8",7,"^9",25,"^:",13,"^86",["^1;",["^87",["^1;",[["~$options"]]]]],"^89","Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \"default value\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```"],"^K","~$kee-frame.core/start!","^6","kee_frame/core.cljc","^:",13,"^8>",["^1;",[["^8H"]]],"^8A",null,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^7",25,"^8E",["^J",["^8D","~$clj-nil"]],"^9",25,"^8=",1,"^8F",true,"^86",["^1;",["^87",["^1;",[["^8H"]]]]],"^89","Starts your client application with the specified `options`.\n\n  This function is intentionally forgiving in certain ways:\n  - You can call it as often as you want. Figwheel should call it on each code change\n  - You can omit the `options` altogether. kee-frame chooses sensible defaults for you and leads the way.\n\n  Usage:\n  ```\n  (k/start! {:debug?         true\n             :routes         my-reitit-routes\n             :hash-routing?  true\n             :initial-db     {:some-property \"default value\"}\n             :root-component [my-reagent-root-component]\n             :app-db-spec    :spec/my-db-spec})\n  ```"],"~$reg-controller",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",56,"^8",7,"^9",56,"^:",21,"^86",["^1;",["^87",["^1;",[["~$id","~$controller"]]]]],"^89","Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted."],"^K","~$kee-frame.core/reg-controller","^6","kee_frame/core.cljc","^:",21,"^8>",["^1;",[["^8L","^8M"]]],"^8A",null,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^7",56,"^8E",["^J",[null,"^8D"]],"^9",56,"^8=",2,"^8F",true,"^86",["^1;",["^87",["^1;",[["^8L","^8M"]]]]],"^89","Put a controller config map into the global controller registry.\n\n  Parameters:\n\n  `id`: Must be unique in controllere registry. Will appear in logs.\n\n  `controller`: A map with the following keys:\n  - `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil\n  return means that the controller should not run for this route.\n\n  - `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous\n  invocation. The function receives whatever non-nil value that was returned from `params`,\n  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function\n  can be omitted.\n\n  - `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the\n  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function\n  can be omitted."],"~$reg-event-db",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",91,"^8",7,"^9",91,"^:",19,"^86",["^1;",["^87",["^1;",[["^8L","~$handler"],["^8L","~$interceptors","^8P"]]]]],"^89","Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.","^8:",["^ ","^8;",false,"^8<",3,"^8=",3,"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8?",["^1;",[null,null]]]],"^K","~$kee-frame.core/reg-event-db","^6","kee_frame/core.cljc","^:",19,"^8:",["^ ","^8;",false,"^8<",3,"^8=",3,"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8?",["^1;",[null,null]]],"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8A",null,"^8<",3,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^8B",[["^ ","^8<",2,"^8;",false,"^8C","^8D"],["^ ","^8<",3,"^8;",false,"^8C","^8D"]],"^7",91,"^9",91,"^8=",3,"^8F",true,"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^89","Exactly same signature as `re-frame.core/reg-event-db`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied."],"~$valid-option-key?",["^ ","^K","~$kee-frame.core/valid-option-key?","^6","kee_frame/core.cljc","^7",14,"^8",1,"^9",14,"^:",23,"^5",["^ ","^6","kee_frame/core.cljc","^7",14,"^8",6,"^9",14,"^:",23],"^8C","~$cljs.core/ISet"],"~$extra-options",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",18,"^8",7,"^9",18,"^:",20,"^86",["^1;",["^87",["^1;",[["^8H"]]]]],"^89","Complete listing of invalid options sent to the `start!` function."],"^K","~$kee-frame.core/extra-options","^6","kee_frame/core.cljc","^:",20,"^8>",["^1;",[["^8H"]]],"^8A",null,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^7",18,"^8E",["^J",[null,"~$clj","^8D"]],"^9",18,"^8=",1,"^8F",true,"^86",["^1;",["^87",["^1;",[["^8H"]]]]],"^89","Complete listing of invalid options sent to the `start!` function."],"~$reg-chain-named",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",98,"^8",7,"^9",98,"^:",22,"^86",["^1;",["^87",["^1;",[["~$&","~$handlers"]]]]],"^89","Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \"...\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```","^8:",["^ ","^8;",true,"^8<",0,"^8=",0,"^8>",[["^1;",["^8Z"]]],"^86",["^1;",[["~$&","^8Z"]]],"^8?",["^1;",[null]]]],"^K","~$kee-frame.core/reg-chain-named","^6","kee_frame/core.cljc","^:",22,"^8:",["^ ","^8;",true,"^8<",0,"^8=",0,"^8>",[["^1;",["^8Z"]]],"^86",["^1;",[["~$&","^8Z"]]],"^8?",["^1;",[null]]],"^8>",[["^1;",["^8Z"]]],"^8A",null,"^8<",0,"^8?",["^1;",[null]],"^8",1,"^8;",true,"^8B",[["^ ","^8<",0,"^8;",true,"^8C","^8D"]],"^7",98,"^8E","^8D","^9",98,"^8=",0,"^8F",true,"^86",["^1;",[["~$&","^8Z"]]],"^89","Same as `reg-chain`, but with manually named event handlers. Useful when you need more meaningful names in your\n  event log.\n\n  Parameters:\n\n  `handlers`: pairs of id and event handler.\n\n  Usage:\n  ```\n  (k/reg-chain-named\n\n    :load-customer-data\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri \"...\"}})\n\n    :receive-customer-data\n     (fn [ctx [customer-id customer-data]]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```"],"~$debug-enabled?",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",50,"^8",7,"^9",50,"^:",21,"^86",["^1;",["^87",["^1;",[[]]]]]],"^K","~$kee-frame.core/debug-enabled?","^6","kee_frame/core.cljc","^:",21,"^8>",["^1;",[[]]],"^8A",null,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^7",50,"^8E",["^J",[null,"^8D"]],"^9",50,"^8=",0,"^8F",true,"^86",["^1;",["^87",["^1;",[[]]]]]],"~$kee-frame-interceptors",["^ ","^K","~$kee-frame.core/kee-frame-interceptors","^6","kee_frame/core.cljc","^7",12,"^8",1,"^9",12,"^:",28,"^5",["^ ","^6","kee_frame/core.cljc","^7",12,"^8",6,"^9",12,"^:",28],"^8C","~$cljs.core/IVector"],"~$path-for",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",154,"^8",7,"^9",154,"^:",15,"^86",["^1;",["^87",["^1;",[["^8P","~$&","~$params"]]]]],"^89","Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`","^8:",["^ ","^8;",true,"^8<",1,"^8=",1,"^8>",[["^1;",["^8P","^96"]]],"^86",["^1;",[["^8P","~$&","^96"]]],"^8?",["^1;",[null]]]],"^K","~$kee-frame.core/path-for","^6","kee_frame/core.cljc","^:",15,"^8:",["^ ","^8;",true,"^8<",1,"^8=",1,"^8>",[["^1;",["^8P","^96"]]],"^86",["^1;",[["^8P","~$&","^96"]]],"^8?",["^1;",[null]]],"^8>",[["^1;",["^8P","^96"]]],"^8A",null,"^8<",1,"^8?",["^1;",[null]],"^8",1,"^8;",true,"^8B",[["^ ","^8<",1,"^8;",true,"^8C","^8D"]],"^7",154,"^8E","^8D","^9",154,"^8=",1,"^8F",true,"^86",["^1;",[["^8P","~$&","^96"]]],"^89","Make a uri from route data. Useful for avoiding hard coded links in your app.\n\n  Parameters:\n\n  `handler`: The reitit handler from route data\n\n  `params`: Reitit route params for the requested route\n\n  Usage: `[:a {:href (k/path-for [:orders :sort-by :date]} \"Orders sorted by date\"]`"],"~$reg-chain",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",121,"^8",7,"^9",121,"^:",16,"^86",["^1;",["^87",["^1;",[["^8L","~$&","^8Z"]]]]],"^89","Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \"/customer/\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```","^8:",["^ ","^8;",true,"^8<",1,"^8=",1,"^8>",[["^1;",["^8L","^8Z"]]],"^86",["^1;",[["^8L","~$&","^8Z"]]],"^8?",["^1;",[null]]]],"^K","~$kee-frame.core/reg-chain","^6","kee_frame/core.cljc","^:",16,"^8:",["^ ","^8;",true,"^8<",1,"^8=",1,"^8>",[["^1;",["^8L","^8Z"]]],"^86",["^1;",[["^8L","~$&","^8Z"]]],"^8?",["^1;",[null]]],"^8>",[["^1;",["^8L","^8Z"]]],"^8A",null,"^8<",1,"^8?",["^1;",[null]],"^8",1,"^8;",true,"^8B",[["^ ","^8<",1,"^8;",true,"^8C","^8D"]],"^7",121,"^8E","^8D","^9",121,"^8=",1,"^8F",true,"^86",["^1;",[["^8L","~$&","^8Z"]]],"^89","Register a list of re-frame fx handlers, chained together.\n\n  The chaining is done through dispatch inference. https://github.com/Day8/re-frame-http-fx is supported by default,\n  you can easily add your own like this: https://github.com/ingesolvoll/kee-frame#configuring-chains-since-020.\n\n  Each handler's event vector is prepended with accumulated event vectors of previous handlers. So if the first handler\n  receives [a b], and the second handler normally would receive [c], it will actually receive [a b c]. The purpose is\n  to make all context available to the entire chain, without a complex framework or crazy scope tricks.\n\n  Parameters:\n\n  `id`: the id of the first re-frame event. The next events in the chain will get the same id followed by an index, so\n  if your id is `add-todo`, the next one in chain will be called `add-todo-1`.\n\n  `handlers`: re-frame event handler functions, registered with `kee-frame.core/reg-event-fx`.\n\n\n  Usage:\n  ```\n  (k/reg-chain\n    :load-customer-data\n\n    (fn [ctx [customer-id]]\n      {:http-xhrio {:uri    (str \"/customer/\" customer-id)\n                    :method :get}})\n\n    (fn [cxt [customer-id customer-data]\n      (assoc-in ctx [:db :customers customer-id] customer-data)))\n  ```"],"~$reg-event-fx",["^ ","^85",null,"^5",["^ ","^6","kee_frame/core.cljc","^7",84,"^8",7,"^9",84,"^:",19,"^86",["^1;",["^87",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]]]],"^89","Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied.","^8:",["^ ","^8;",false,"^8<",3,"^8=",3,"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8?",["^1;",[null,null]]]],"^K","~$kee-frame.core/reg-event-fx","^6","kee_frame/core.cljc","^:",19,"^8:",["^ ","^8;",false,"^8<",3,"^8=",3,"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8?",["^1;",[null,null]]],"^8>",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^8A",null,"^8<",3,"^8?",["^1;",[null,null]],"^8",1,"^8;",false,"^8B",[["^ ","^8<",2,"^8;",false,"^8C","^8D"],["^ ","^8<",3,"^8;",false,"^8C","^8D"]],"^7",84,"^9",84,"^8=",3,"^8F",true,"^86",["^1;",[["^8L","^8P"],["^8L","^8Q","^8P"]]],"^89","Exactly same signature as `re-frame.core/reg-event-fx`. Use this version if you want kee-frame logging and spec validation.\n\n  `re-frame.core/trim-v` interceptor is also applied."]],"^19",["^ ","^V","^V","^B","^C","~$s","^C","^C","^C"],"~:cljs.analyzer/constants",["^ ","^13",["^J",["~:debug-config","~:routes","~:screen","~:router","~:app-db-spec","~:overwrites?","~:warn","~:hash-routing?","~:chain-links","~:process-route","~:debug?","~:scroll","~:root-component","~:kee-frame.spec/start-options","~:kee-frame.spec/controller","~:initial-db"]],"~:order",["^9=","^9>","^9?","^9@","^9A","^9D","^9E","^9F","^9G","^9H","^9I","^9L","^9J","^9B","^9K","^9C"]],"^1?",["^ ","^14",["^J",[]]],"^1@",["^ "],"^1A",["^W","^V","^Q","^Y","^R","^U","^11","^Z","^C","^S"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^1O",[["^9P","~:static-fns"],true,["^9P","~:shadow-tweaks"],null,["^9P","~:elide-asserts"],false,["^9P","~:optimize-constants"],null,["^9P","^1F"],null,["^9P","~:external-config"],null,["^9P","~:tooling-config"],null,["^9P","~:emit-constants"],null,["^9P","~:load-tests"],null,["^9P","~:form-size-threshold"],null,["^9P","~:infer-externs"],true,["^9P","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9P","~:fn-invoke-direct"],null,["^9P","~:source-map"],"/dev/null"]]]